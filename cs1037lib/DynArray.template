#include "cs1037assert.h"  


template <class T>
DynArray<T> :: DynArray() 
: m_container(NULL), m_size(0){} 

template <class T>
DynArray<T> :: DynArray(int size) 
: m_container(NULL) {resize(size);} 

template <class T>
DynArray<T> :: ~DynArray() {if (m_container) delete[] m_container;}

template <class T>
T& DynArray<T> :: operator[](int x) const
{
    return m_container[x];
}

template <class T>
void DynArray<T> :: resize(int new_size) 
{
    Assert( new_size>=0, "DynArray size is negative (in 'resize')" );
	if (m_container) delete [] m_container;
    m_size = new_size;
    if (m_size==0) m_container=NULL; 
    else m_container = new T[m_size];
    return;
}
